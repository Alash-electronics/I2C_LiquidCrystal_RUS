// Простой пример подключения дисплея по шине I2C с добавлением своих символов

// Определение типа подключения дисплея:
               // 1 - через шину I2C
               // 2 - без I2C шины. 
#define _LCD_TYPE 1 //Обязательно указывать ДО подключения библиотеки,
// иначе возникнет ошибка при компиляции: "LCD type connect has not been declared"

#include <I2C_LiquidCrystal_RUS.h> //Импортируем библиотеку

// Создание объекта lcd с адресом 0x27, размером 16x2 и 2 пользовательскими символами
I2C_LiquidCrystal_RUS lcd(0x27, 16, 2, 2); 

// Определение пользовательских символов
uint8_t symbol_one[8] = {
  B01110,
  B11111,
  B11111,
  B11111,
  B01111,
  B00111,
  B00011,
  B00001,
};
uint8_t symbol_two[8] = {
  B01110,
  B11111,
  B11111,
  B11111,
  B11110,
  B11100,
  B11000,
  B10000,
};

void setup() {
  lcd.init(); // Инициализация LCD
  // Для Arduino: A4 - SDA, A5 - SCL
  // Для ESP8266: 4(D2) - SDA, 5(D1) - SCL
  // Для ESP8266-01 I2C: 0 - SDA, 2 - SCL
  // Для ESP32: D21 - SDA, D22 - SCL

  // Печать сообщения на LCD
  lcd.backlight(); // Включение подсветки
  lcd.setCursor(4, 0); // Установка курсора в позицию (6, 0)
  lcd.print("Свои"); // Печать текста
  lcd.setCursor(2, 1); // Установка курсора в позицию (2, 1)
  lcd.print("символы:"); // Печать текста

  // Переназначение своих символов - с индексами 6 и 7
  lcd.createChar(6, symbol_one); // Создание символа с индексом 6
  lcd.createChar(7, symbol_two); // Создание символа с индексом 7
  lcd.setCursor(12, 1); // Установка курсора в позицию (12, 1)
  lcd.write(6); // Печать символа с индексом 6
  lcd.setCursor(13, 1); // Установка курсора в позицию (13, 1)
  lcd.write(7); // Печать символа с индексом 7
}

void loop() {
}
